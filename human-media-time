#!/usr/bin/env ruby

require 'open3'
require 'optparse'

# Options
ARGV.push('--help') if ARGV.empty?

options = {}
OptionParser.new do |opt|
  opt.banner = "Output total running time of files in a human-readable way.\n\nusage: #{$PROGRAM_NAME} [options] <path...>\n\noptions:"

  opt.on('-p [d|h|m]', '--precision [d|h|m]', 'Rounds and truncates time to the chosen unit.') { |unit| options[:precision] = unit }
end.parse!

ms_values = ''
split_time = {}
human_time = ''

ARGV.each { |file| ms_values += Open3.capture2('mediainfo', '--Output=General;%Duration%,', file).first }
ms_total = ms_values.split(',').map(&:to_i).inject(0, :+)

split_time['s'] = (ms_total / 1000) % 60
split_time['m'] = (ms_total / (1000 * 60)) % 60
split_time['h'] = (ms_total / (1000 * 60 * 60)) % 24
split_time['d'] = (ms_total / (1000 * 60 * 60 * 24)) % 365

if defined? options[:precision]
  if options[:precision] =~ /^[mhd]$/
    split_time['m'] += 1 if split_time['s'] >= 30
    split_time['s'] = 0

    if split_time['m'] == 60
      split_time['m'] = 0
      split_time['h'] += 1
    end
  end

  if options[:precision] =~ /^[hd]$/
    split_time['h'] += 1 if split_time['m'] >= 30
    split_time['m'] = 0

    if split_time['h'] == 60
      split_time['h'] = 0
      split_time['d'] += 1
    end
  end

  if options[:precision] == 'd'
    split_time['d'] += 1 if split_time['h'] >= 24
    split_time['h'] = 0
  end
end

split_time.each { |key, value| human_time = value.to_s + key + ' ' + human_time if value > 0 }
human_time = "0#{options[:precision]}" if human_time.empty? # If the desired precision leads to zero the previous line strips it, making the variable empty
puts human_time.strip

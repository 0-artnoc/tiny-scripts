#!/bin/bash

readonly program="$(basename "${0}")"

function get_output_path {
  local -r ext="${1}"
  local -r input_path="${2}"
  local output_path="${3}"

  if [[ ! -d "$(dirname "${output_path}")" ]]; then
    echo "Cannot create '${output_path}'. Parent directory does not exist." >&2
    exit 1
  fi

  if [[ -n "${output_path}" ]]; then
    [[ "${output_path##*.}" == "${ext}" ]] && echo "${output_path}" || echo "${output_path}${ext}"
  else
    output_path="$(pwd -P)/$(basename "${input_path%.*}${ext}")"

    while [[ -e "${output_path}" ]]; do
      output_path="${output_path%.*}_$(date -u +'%Y.%m.%d.%H%M%S')${ext}"
    done

    echo "${output_path}"
  fi
}

function syntax_error {
  echo -e "${program}: ${1}\nTry \`${program} --help\` for more information." >&2
  exit 1
}

function usage {
  echo "
    Make an icns file from a png.

    Usage:
      ${program} [options] <file>

    Options:
      -o, --output-file <file>   File to output to. Default is with same name on current directory.
      -h, --help                 Show this message.
  " | sed -E 's/^ {4}//'
}

# available flags
args=()
while [[ "${1}" ]]; do
  case "${1}" in
    -h | --help)
      usage
      exit 0
      ;;
    -o | --output-file)
      readonly given_output_path="${2}"
      shift
      ;;
    --)
      shift
      args+=("${@}")
      break
      ;;
    -*)
      syntax_error "Unrecognised option: ${1}"
      ;;
    *)
      args+=("${1}")
      ;;
  esac
  shift
done
set -- "${args[@]}"

readonly input_file="${1}"
readonly output_file="$(get_output_path '.icns' "${input_file}" "${given_output_path}")"
readonly iconset="$(mktemp -d)"

if [[ "${#}" -ne 1 || ! -f "${input_file}" ]]; then
  usage
  exit 1
fi

if [[ "$(mdls -raw -name 'kMDItemContentType' "${input_file}")" != 'public.png' ]]; then
  echo 'Image needs to be a png.' >&2
  exit 1
fi

for size in {16,32,64,128,256,512}; do
  sips --resampleHeightWidth "${size}" "${size}" "${input_file}" --out "${iconset}/icon_${size}x${size}.png" &> /dev/null
  sips --resampleHeightWidth "$((size * 2))" "$((size * 2))" "${input_file}" --out "${iconset}/icon_${size}x${size}@2x.png" &> /dev/null
done

mv "${iconset}" "${iconset}.iconset"
iconutil --convert icns "${iconset}.iconset" --output "${output_file}"

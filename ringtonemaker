#!/bin/bash

readonly program="$(basename "${0}")"

function depends_on {
  readonly local dep="${1}"

  if ! command -v "${dep}" &>/dev/null; then
    echo -e >&2 "\n$(tput setaf 1)This script requires ${dep}. Please install it first.$(tput sgr0)\n"
    exit 1
  fi
}

function syntax_error {
  echo "${program}: ${1}" >&2
  echo "Try \`${program} --help\` for more information." >&2
  exit 1
}

function usage {
  echo "
    usage: ${program} [-d <duration>] [-s <time>] [-o <output_file>] <input_file>

    options:
      -d <number>, --duration <number>   Duration (in seconds) of the output file. Maximum is 40 seconds.
      -o <file>, --output <file>         Path to output file. If empty, will be next to the input file.
      -s <time>, --start <time>          Start time from when to start cutting, in the form xx:xx:xx
      -h, --help                         Show this help.
  " | sed -E 's/^ {4}//'
}

# available flags
args=()
while [[ "${1}" ]]; do
  case "${1}" in
    -h | --help)
      usage
      exit 0
      ;;
    -d | --duration)
      duration="${2}"
      shift
      ;;
    -o | --output)
      output_file="${2}"
      shift
      ;;
    -s | --start)
      start="${2}"
      shift
      ;;
    -*)
      syntax_error "unrecognized option: ${1}"
      ;;
    *)
      args+=("${1}")
      ;;
  esac
  shift
done
set -- "${args[@]}"

depends_on 'ffmpeg'

input_file="${1}"

if [[ ! -f "${input_file}" ]]; then
  echo 'A valid path to an input file is required.'
  usage
  exit 1
fi

[[ -z "${output_file}" ]] && output_file="${input_file%.*}"
[[ -z "${duration}" || "${duration}" -gt 40 ]] && duration='40'
[[ -z "${start}" ]] && start='00:00:00'

ffmpeg -i "${input_file}" -vn -acodec aac -f mp4 -ss "${start}" -t "${duration}" "${output_file}.m4r"

#!/bin/bash

readonly program="$(basename "${0}")"

function syntax_error {
  echo "${program}: ${1}" >&2
  echo "Try \`${program} --help\` for more information." >&2
  exit 1
}

IFS=$'\n'

# Instructions on how to use the script
# Shown with '-h', or when no arguments are given
function usage {
  echo "
    usage: \$1 [options] <files>

    options:
      -s <num>, --starting-number <num>   Sets starting number for the sequence (defaults to 1).
      -l <num>, --sequence-length <num>   Sets sequence length (defaults to what'll accomodate the number of files).
      -p <string>, --prepend <string>     Sets name to prepend to the sequence number (defaults to nothing).
      -a <string>, --append <string>      Sets name to append to the sequence number (defaults to nothing).
      -v, --verbose                       Be verbose.
      -h, --help                          Show this message.
  " | sed -E 's/^ {4}//'
}

if [[ "${#}" -eq 0 ]]; then
  usage
  exit 1
fi

# Available flags to use with the script
while [[ "${1}" ]]; do
  case "${1}" in
    -h | --help)
      usage
      exit 0
      ;;
    -s | --starting-number)
      starting_num="${2}"
      shift
      ;;
    -l | --sequence-length)
      leading_zeros="${2}"
      shift
      ;;
    -p | --prepend)
      string_to_prepend="${2}"
      shift
      ;;
    -a | --append)
      string_to_append="${2}"
      shift
      ;;
    -v | --verbose)
      be_verbose="v"
      ;;
    -*)
      syntax_error "unrecognized option: ${1}"
      ;;
    *)
      break
      ;;
  esac
  shift
done

# Determines the starting number, depending on if one was picked
[[ "${starting_num}" ]] && num=$((${starting_num}-1)) || num=0

# If no sequence length is given,
# it will be set accordingly to what the last number
# in the sequence is (depending on the starting number)
if [[ -z "${leading_zeros}" ]]; then
  sequence_end="$(($(echo -n "${#}")+${num}))"
  leading_zeros="$(echo -n "${sequence_end}" | wc -c | tr -d ' ')"
fi

# The actual renaming part
# “#10” is necessary for using base10
for file_to_rename in "${@}"; do
  num=$(printf "%.${leading_zeros}d" "$((10#${num}+1))")

  mv -n"${be_verbose}" "${file_to_rename}" "$(dirname "${file_to_rename}")/${string_to_prepend}${num}${string_to_append}.${file_to_rename##*.}"
done
